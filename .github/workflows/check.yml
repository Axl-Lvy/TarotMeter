name: Check code

on:
  pull_request:
    types: [ opened, synchronize, reopened, edited ]
  push:
    branches: [ master ]
  schedule:
    - cron: 0 0 * * 1,4

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Run JVM tests, which do not require secrets
  jvm-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: false

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run JVM tests
        run: ./gradlew jvmTest

  # Generate the coverage report using JaCoCo
  sonar-analysis:
    name: Sonar analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Build and Analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            ./gradlew build sonar --no-configuration-cache --no-parallel --no-daemon \
              -Dsonar.branch.name=master
          else
            ./gradlew build sonar --no-configuration-cache --no-parallel --no-daemon
          fi

  # Check code formatting using ktfmt
  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure tests checkbox is checked
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || "";
            if (!body.includes('- [x] Check code formatting')) {
              core.setFailed('The "Check code formatting" box must be checked in the PR description.');
            }

      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run formatter check
        run: ./gradlew ktfmtCheck
